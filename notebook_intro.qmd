---
title: "Intro to GRASS GIS"
subtitle: "Basic notions, interfaces and temporal framework"
author: "Veronica Andreo"
date: '`r Sys.Date()`'
editor: 
  markdown: 
    wrap: 80
---

## Open GRASS for the first time

When you open GRASS you'll get both the **terminal** and the **graphical user 
interface** (GUI). You can use GRASS tools in either. It's a matter of taste, 
task on hand and habit, too.

GRASS GUI has a *single window layout* by default, but it is also possible to minimize and/or dock/undock the panels. On the right, you can find the **data** browser which allows you to navigate through your projects and data, and the **layers** panel showing displayed layers. The panel in the middle is the **map display**. You can add additional ones if you need. Finally, on the right there are multiple tabs where you can find a searchable *tools' tree* similar to the Processing toolbox in QGIS, a *console* where you can type GRASS commands, the *history* of executed commands in case you want to re-run a task and a simple *Python console* where you can use the GRASS Python API.

From the **data** panel you can manage several actions and, if 
you do not yet have imported data into your GRASS project, the 
software creates a project with demo data automatically.

![](assets/img/studio/grass_gui_first_time_and_cli_combined.png){width="95%" fig-align="center"}

## Database

- **GRASS database** (directory with projects): When running GRASS GIS for the
  first time, a folder named *grassdata* is automatically created. Depending
  on the operating system, it can be found in `$HOME` (\*nix) or
  `My Documents` (MS Windows).
- **Project**: GRASS projects are simply folders storing your geospatial data
  with common coordinate reference system (CRS), ensuring consistency of your
  data.
- **Mapset**: Data is further organized into subprojects called mapsets, which
  you can use to manage different subregions or analyses within a project. 
  When  creating a new project, GRASS GIS automatically creates a special 
  mapset called *PERMANENT* which is used to store source datasets for your
  analysis that can be easily accessed from other mapsets.

![](assets/img/studio/grass_database.png){width="60%" fig-align="center"}


::: callout-note
More info: <https://grass.osgeo.org/grass-stable/manuals/grass_database.html>.
:::

## Computational region

A very useful concept when working with raster data is that of the 
**computational region**. 
It refers to the *boundaries and spatial resolution of the analysis area*. The
computational region can be defined and modified with the tool
[g.region](https://grass.osgeo.org/grass-stable/manuals/g.region.html) to the
extent of a vector map, a raster or manually to some area of interest. The
*output raster maps* will have an extent and spatial resolution equal to the
computational region, while vector maps are always processed at their original
extent.

![](assets/img/studio/region.png){width="60%" fig-align="center"}


::: callout-note
For more details, see the wiki on [Computational Region](https://grasswiki.osgeo.org/wiki/Computational_region).
:::

## Tools

GRASS has more than [500
tools](https://grass.osgeo.org/grass-stable/manuals/full_index.html) for the
most varied tasks:

| Prefix                                                                   | Function class | Type of command         | Example                                                                                                                |
|------------------|:--------------|:--------------|:--------------------------------|
| [g.\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#g)   | general        | general data management | [g.rename](https://grass.osgeo.org/grass-stable/manuals/g.rename.html): renames map                                    |
| [d.\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#d)   | display        | graphical output        | [d.rast](https://grass.osgeo.org/grass-stable/manuals/d.rast.html): display raster map                                 |
| [r.\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#r)   | raster         | raster processing       | [r.mapcalc](https://grass.osgeo.org/grass-stable/manuals/r.mapcalc.html): map algebra                                  |
| [v.\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#r)   | vector         | vector processing       | [v.clean](https://grass.osgeo.org/grass-stable/manuals/v.clean.html): topological cleaning                             |
| [i.\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#i)   | imagery        | imagery processing      | [i.pca](https://grass.osgeo.org/grass-stable/manuals/i.pca.html): Principal Components Analysis on imagery group       |
| [r3.\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#r3) | voxel          | 3D raster processing    | [r3.stats](https://grass.osgeo.org/grass-stable/manuals/r3.stats.html): voxel statistics                               |
| [db.\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#db) | database       | database management     | [db.select](https://grass.osgeo.org/grass-stable/manuals/db.select.html): select value(s) from table                   |
| [ps.\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#ps) | postscript     | PostScript map creation | [ps.map](https://grass.osgeo.org/grass-stable/manuals/ps.map.html): PostScript map creation                            |
| [t.\*](https://grass.osgeo.org/grass-stable/manuals/full_index.html#t)   | temporal       | space-time datasets     | [t.rast.aggregate](https://grass.osgeo.org/grass-stable/manuals/t.rast.aggregate.html): raster time series aggregation |

Extensions or [**add-ons**](https://grass.osgeo.org/grass-stable/manuals/addons/) 
can be installed from the [central GitHub repository](https://github.com/OSGeo/grass-addons)
or from *other users' GitHub* (or similar repositories) using the command
[g.extension](https://grass.osgeo.org/grass-stable/manuals/g.extension.html).
For example:

``` bash
 # install an extension from the GRASS GIS repository
 g.extension extension=r.hants
 
 # install an extension from another GitHub repository
 g.extension extension=r.change.stats \
   url=https://github.com/mundialis/r.change.stats
```

## GRASS + {{< fa brands python >}}

There are different Python libraries delivered with GRASS GIS, we'll use 2 of 
them:

- `grass.script` which provides Python interface to launch GRASS GIS modules in scripts
- `grass.jupyter` which offers classes and setup functions for running GRASS GIS in Jupyter Notebooks

Other Python libraries delivered with GRASS GIS include: pygrass, the temporal 
framework, the testing framework, among others.


We can use Python within GRASS GUI, within Jupyter notebooks, or from our 
preferred IDE. See the options within the GUI:

![](assets/img/studio/grass_and_python_gui.png)

::: {.callout-note}
See <https://grass.osgeo.org/grass-stable/manuals/libpython/index.html> for further 
details.
:::


## GRASS + {{< fa brands r-project >}} through `rgrass` package

We can use [R within a GRASS GIS
session](https://grasswiki.osgeo.org/wiki/R_statistics/rgrass7#R_within_GRASS)
or use [GRASS GIS within an R
session](https://grasswiki.osgeo.org/wiki/R_statistics/rgrass7#GRASS_within_R).
We'll explore this further in the last part of this session.

![](assets/img/studio/RwithinGRASS_and_Rstudio_from_grass.png)


## Demo session overview

Habitat suitability mapping for the Asian tiger mosquito in Northern Italy based
on variables derived from daily LST data

- **GRASS**
    - Import species records
    - Create random background points
    - Create different environmental layers from daily LST data
- **R**
    - Read data from GRASS into R
    - Model species distribution
    - Model evaluation
    - Visualization of results

![](assets/img/workflow_sdm_other.png){width="85%" fig-align="center"}


### Data for the session

<img src="assets/img/studio/aedes_albopictus.jpg" width="30%" align="right"/>

- Records of *Aedes albopictus* (Asian tiger mosquito) in Northern Italy
  downloaded from [GBIF](https://www.gbif.org/)
- Average daily MODIS LST reconstructed by 
  [mundialis GmbH & Co. KG](https://www.mundialis.de/en/) based on @metz_new_2017:
    - 1 km spatial resolution
    - Converted to Celsius degrees

<img src="assets/img/studio/lst_north_italy_2014.png" width="40%" align="right" padding-right="15px"/>


### Get the sample location

- Create a folder named `grass_ncsu_2023`
- Within `grass_ncsu_2023` create a folder named `grassdata`
- Download and unzip [eu_laea location with LST mapset](https://drive.google.com/file/d/1z1b2NLC4Z6yzz_57RddTdRRK_gUkd7fU/view?usp=sharing)
and unzip within your `grassdata` folder
- Download [mosquito data](https://github.com/veroandreo/grass_ncsu_2023/raw/main/data/aedes_albopictus.gpkg) and drop it within `grass_ncsu_2023`

The `grass_ncsu_2023` folder's tree should look like this:

```         
  grass_ncsu_2023/
  ├── aedes_albopictus.gpkg
  └── grassdata
      └── eu_laea
          ├── italy_LST_daily
          └── PERMANENT

```

# GRASS GIS HELP!!!

- [g.manual](https://grass.osgeo.org/grass76/manuals/g.manual.html):
  in the main GUI under Help or just pressing *F1*
- `--help` or `--h` flag after the module name in the terminal
- [GRASS website](https://grass.osgeo.org/): rich [learn](https://grass.osgeo.org/learn/) section with links to videos, tutorials, courses, books, etc.
- [GRASS wiki](https://grasswiki.osgeo.org/wiki/GRASS-Wiki): examples,
  explanations on particular modules or tasks,
  [tutorials](https://grasswiki.osgeo.org/wiki/Category:Tutorial),
  applications, etc.
- grass-user mailing list: [subscribe](https://lists.osgeo.org/mailman/listinfo/grass-user) and post or check the [archives](https://lists.osgeo.org/pipermail/grass-user/)
- GRASS Gitter chat: <https://gitter.im/grassgis/community>
- Link to source code and history in each module manual page, eg., 
[t.rast.algebra](https://grass.osgeo.org/grass-stable/manuals/t.rast.algebra.html)

![](assets/img/studio/source_code_link.png){width="650px" fig-align="center"}


## Other (very) useful links

- [GRASS intro workshop held at NCSU](https://ncsu-osgeorel.github.io/grass-intro-workshop/)
- [Unleash the power of GRASS GIS at US-IALE 2017](https://grasswiki.osgeo.org/wiki/Unleash_the_power_of_GRASS_GIS_at_US-IALE_2017)
- [Temporal data processing wiki](https://grasswiki.osgeo.org/wiki/Temporal_data_processing)
- [GRASS GIS and R for time series processing wiki](https://grasswiki.osgeo.org/wiki/Temporal_data_processing/GRASS_R_raster_time_series_processing)
- [GRASS GIS temporal workshop at NCSU](http://ncsu-geoforall-lab.github.io/grass-temporal-workshop/)
- [GRASS GIS course in Jena](https://training.gismentors.eu/grass-gis-workshop-jena/index.html)
- [GRASS GIS course IRSAE](http://training.gismentors.eu/grass-gis-irsae-winter-course-2018/index.html)
- [GRASS GIS course in Argentina](https://gitlab.com/veroandreo/curso-grass-gis-rioiv)

# References

:::{#refs}

:::
